defmodule Foo.Bar.Sample do

  @spec(turtle, {Foo.Bar.Turtle}, String)
  def turtle(%{name => "Ellie", age => age}) do
    "Ellie has an age"
  end

  @spec(turtle, {Foo.Bar.Turtle}, String)
  def turtle(%{name => name}) do
    name
  end

  @spec(test, {Atom}, String)
  def test(:test) do
    "success"
  end

  @spec(test, {Atom}, String)
  def test(other) do
    "fail"
  end

  @spec(pattern, {Lang.FunctionSpec}, Atom)
  def pattern(%{name => :Foo}) do
    :ok
  end

  @spec(pattern, {Lang.FunctionSpec}, String)
  def pattern(%{name => name}) do
    test(name)
  end
end