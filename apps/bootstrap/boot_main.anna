defmodule(BootMain, {
  @alias vm.Lang;
  @alias vm.NativeKernel;
  @alias vm.Pid;
  @alias util.StringUtil;
  @alias util.File;
  @alias vm.Reference;

  @def start([Atom], {
    result = compile_all();
    start_app(result);
    @_'ok';
  });

  @def compile_all([Tuple], {
    base_path = AppCode.anna_lang_home();
    AppCode.compile_path('apps/stdlib/lib', base_path);
    AppCode.compile_path('apps/unit_tests/lib', base_path);
    AppCode.compile_path('apps/ia/lib', base_path);
    AppCode.compile_path('apps/unit_tests/tests', base_path);
    AppCode.compile_path('apps/project/lib', base_path);
  });

  @def start_app({Tuple: [@_'error', message]}, [Atom], {
    @_'error';
  });

  @def start_app({Tuple: _}, [Atom], {
    pid = self();
    //AppCode.compile('project/apps/local_history/lib/local_history.anna');
    //@native NativeKernel.applyMFA(self(), @_'LocalHistory', @_'start', @tuple[], {});
    //result = AppCode.compile('../../../apps/main/lib/app.anna');
    //@native NativeKernel.applyMFA(pid, @_'App', @_'start', @tuple[], {});
    @native NativeKernel.applyMFA(pid, @_'IAMain', @_'start', @tuple[], {});
  });

  @def self([Pid], {
    @native vm.Process.self();
  });

})
