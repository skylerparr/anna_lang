defmodule(AtomTest, {
  @alias vm.Lang;

  @def test_should_create_atoms([Atom], {
    Assert.assert(@_'ok', @_'ok');
  });

  @def test_should_not_match_atoms([Atom], {
    Assert.refute(@_'ok', @_'fail');
  });

  @def test_should_create_atoms_interp([Atom], {
    result = @native Lang.eval('@_"ok"');
    Assert.assert(@_'ok', cast(result, Atom));
  });

  @def test_should_match_function_head_atoms([Atom], {
    match(@_'ok', @_'good');
  });

  @def test_should_match_function_head_atoms_interp([Atom], {
    result = @native Lang.eval("@_'good'");
    match(@_'ok', cast(result, Atom));
  });

  @def match({Atom: @_'ok', Atom: @_'good'}, [Atom], {
    Assert.assert(@_'true');
  });

  @def match({Atom: _, Atom: _}, [Atom], {
    Assert.assert(@_'false');
  });

})